// 1. [TAMBAHAN] Kode untuk membaca file properti keystore
// File ini akan menyimpan informasi rahasia (password, alias) agar tidak terekspos di sini.
// Pastikan kamu membuat file 'keystore.properties' di folder 'android/'
def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'

android {
    // 2. [TAMBAHAN] Definisikan konfigurasi penandatanganan (signing) untuk rilis
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                // Ambil path, password, dan alias dari file keystore.properties
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    namespace "com.airdrop4ll.app"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.airdrop4ll.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        // 3. [EDIT] Atur informasi versi aplikasi
        // NAIKKAN versionCode menjadi 2, 3, dst. setiap kali kamu akan merilis UPDATE baru ke Play Store.
        versionCode 1
        // Ini adalah nama versi yang akan dilihat pengguna. Sesuai dengan nama aplikasimu.
        versionName "1.0.0 (Beta)"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
            // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            // 4. [EDIT] Terapkan signingConfig yang sudah dibuat ke build tipe 'release'
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

